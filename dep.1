.TH DEP 1 "Version 1"

.SH NAME
dep \- diversity estimation probabilistically

.SH SYNOPSIS
dep dist [options] samples.rdb sample_pairings.rdb ref.fasta
.br
dep pileup [options] samples.rdb ref.fasta out.pileup
.br

.SH DESCRIPTION
.PP
.B dep
is a collection of programs for analyzing single-base loci from BAM
alignments of next-gen sequencing reads.

.TP
.B dist
dep dist [options] samples.rdb sample_pairings.rdb ref.fasta

\fBdep dist\fP processes BAM alignments in samples.rdb file,
internally producing basecall counts at each locus for each sample.
It then compares the distributions of these counts between pairs of
samples as specified in \fBsample_pairings.rdb\fP to find loci that
have statistically significant differences, both in basecalls for
match states and for indel content, reporting a 'mutational distance'
measure (AA -> GG = distance 1) with confidence intervals.

dep does not assume diploidy.  Given two samples, one with 23%A / 77%G
and another with 27%A / 73%G, dep will correctly assess true
mutational distance.  Other genotypers may 'call' the first sample as
GG, the second as AG, and thus report a false positive 'difference'
between the two samples.

The notion of 'difference from reference' is assessed with the same
algorithm, but substituting a 'pseudosample' of ultra-high depth
basecalls, all matching reference to stand in for the second sample in
the pair.  This also produces confidence intervals on the distance
measure, the spread determined by the quality of real data from the
first sample in the pair.

.SH FILES

.RS 2

.TP
.B samples.rdb
Input file specifying all of the samples to be processed.  Provides a
mapping of the sample's symbolic name to the locations of the BAM
input files. Corresponding .bai index files must also be present.

For example:

.br
10      /path/to/abc.bam
.br
11      /path/to/def.bam
.br
12      /path/to/ghi.bam
.br


.TP
.B sample_pairings.rdb
Each line contains two tab-separated fields.  The first field must be
the symbolic name of one of the samples in \fBsamples.rdb\fP.  The
second field may be a symbolic name of another sample or the
string 'REF'.  If it is a symbolic name, dep will produce mutational
distance measure between these two samples.  If it is 'REF', dep will
produce the more traditional 'SNP calls' (differences from reference),
but with error bars.

For example:

.br
10    REF
.br
10    11
.br
11    12
.br
11    REF
.br
10    12


.TP
.B ref.fasta
The fasta-formatted reference genome that was used for all .bam file
inputs.  The corresponding index file ref.fasta.fai (produced by
samtools faidx) must also be present.


.SH OPTIONS

.B Command Option Definitions

Here are short descriptions of each option. See next section for
descriptions and examples of output produced.

.TP
.I -d dist_file
Name of file to report mutational distance quantile values.  If not
provided, will not perform distance calculation.

.TP
.I -c comp_file
Name of file to report base composition marginal quantile values. If
not provided, do not perform composition estimates.

.TP
.I -i indel_dist_file
Name of file to report loci that differ in indel content. If not
provided, do not calculated indel distance.

.TP
.I -l input_range_file
Input file that defines ranges of loci to process, e.g.: "chr1 1000000
2000000" (tab-separated fields).  May contain any number of
lines. Useful for breaking up the work into batches while avoiding
splitting large input files.

.TP
.I -x summary_stats_file
Output file providing counts of total number of loci processed and
sub-counts of those loci found as changed, unchanged, or ambiguous
(too little data to call confidently).  Counts are provided for each
pair of samples in \fBsample_pairings.rdb\fP. Useful for diagnosing
loss of calls due to low-coverage loci.

.TP
.I -y min_distance
Minimum mutational distance (on a [0,1] scale) to call a
locus 'changed' between a pair of samples. This threshold is applied
at the (usually very conservative) mutational distance measure
quantile of \fIpost_confidence\fP, and thus should be set to a
permissive value. For example, if \fIpost_confidence\fP is set at 0.99
(99% confidence), a true haploid change between a pair of samples
sequenced to ~50x depth, may manifest at mutational distance 0.2
rather than 0.5. See \fBLONG DESCRIPTION\fP for an explanation.

.TP
.I -X post_confidence
The quantile in the pairwise distance distribution at which
\fImin_distance\fP is assessed in order to classify the locus as
changed.

.TP
.I -Z beta_confidence
The pairwise distance distribution is sampled randomly, and each
sample point is classified as a 'success' if its value is less than
min_distance, or 'failure' otherwise.  This bernoulli trial allows
estimation of the true mass fraction of the distribution on either
side of min_distance, through the Beta distribution, known as the
Jeffrey's Interval in
http://en.wikipedia.org/wiki/Binomial_proportion_confidence_interval.
This value gives the high-end quantile confidence for using this
procedure.

.TP
.I -P max_sample_points
Maximum number of Dirichlet sample points that will be generated to
estimate distance quantiles.

.TP
.I -p prior_alpha
Should range from 1e-5 to 1. A lower value is more permissive,
allowing pairs of loci, each with only a few basecalls (yet differing)
to be called as 'changed' with statistical significance. 

.TP
.I -C quantiles_string
The 'error bar' values to report mutational distance estimation and
base composition estimation.  Must be a comma-separated list of
numbers, ascending, between zero and one.

.TP
.I -Q min_base_quality
The minimum phred quality score that a base must have in order to be
included in the analysis. Set this at or above 5 for Illumina data, or
even 10.  A lower value may be used if focusing on a small region and
false positive calls are not a major concern.

.TP
.I -q min_map_quality
The minimum mapping quality that a BAM record must have in order to be
included in the analysis.

.TP
.I -f rflag_require
Integer-encoded set of bits.  1's mean that these bit positions are
required to be \fBset\fP in the BAM flag field for the BAM record to
be included in the analysis.

.TP
.I -F rflag_filter
Integer-encoded set of bits.  1's mean that these bit positions are
required to be \fBunset\fP in the BAM flag field for the BAM record to
be included in the analysis.

.TP
.I -R read_groups
File containing one read group per line.  If provided, only BAM
records having one of these read groups are included in the analysis.
If not provided, no filtering based on read groups is performed.  See
the '@RG' fields of the BAM headers for all read groups.

.TP
.I -t n_threads
Number of POSIX threads the program will use.

.TP
.I -r max_concurrent_reads
Maximum number of worker threads that are allowed to read from
different sections of the input files concurrently.  This defaults to
\fIn_threads\fP, which means that any thread can read whenever it is
ready for new input.  If you find that too many threads reading at the
same time causes inefficient disk usage, you may reduce the number by
specifying this option explicitly.  Then, any threads that are ready
for new input will have to wait until fewer than
\fImax_concurrent_reads\fP threads are reading.

.TP
.I -m max_mem
Approximate maximum memory in bytes to reserve for running the program
overall.  This should be set at about 80% of the available physical
memory (provided you have use of the entire machine).  This allows
more caching and reading of greater chunks of files, which limits the
amount of file scanning needed to delineate input chunks.

.TP
.I -g [do_print_pileup_fields]
If this flag present, print the six extra fields read_depth1, basecalls1,
quality_codes1, read_depth2, basecalls2, quality_codes2 in
\fBoutput.dist\fP.

.SH OUTPUT FILES


.TP
.B output.dist
Each line represents a single locus whose base composition of two
particular samples differs above a threshold.  In the following
example, the pairwise sample comparisons were (samP, samQ), (samP,
samR), (samQ, samR), (samP, REF), (samQ, REF), and (samR, REF).  For
the locus 1:462258, we see that five of the six yielded significant
difference.

samP  REF  1  462258  A  0.3425  0.5901  0.9194  0.9983  0.9999  TT       REF
.br
samR  REF  1  462258  A  0.3907  0.5845  0.8500  0.9744  0.9956  CCCCC,C  REF
.br
samP  samQ 1  462258  A  0.2004  0.4762  0.8525  0.9806  0.9972  TT       ,,,,,
.br
samP  samR 1  462258  A  0.2563  0.4608  0.8167  0.9496  0.9839  TT       CCCCC,C
.br
samQ  samR 1  462258  A  0.3086  0.4988  0.7871  0.9444  0.9838  ,,,,,    CCCCC,C

In the first two lines, 'REF' in the second column means the
comparison is between the sample and the reference pseudo-sample,
which has 'A' at 1:462258.  Pileup bases are shown in the last two
columns.  We can see that each sample is different from the other, but
only samples samP and 3 are different from reference.

The tab-delimited fields are:

.RS

.IP <sample1_label> 24
The label for the first sample in the pair, as specified in
\fBsamples.rdb\fP
.IP <sample2_label>
The label for the second sample in the pair, as specified in
\fBsamples.rdb\fP or the string 'REF' if this is a comparison to
reference
.IP <contig_name>
Name of the chromosome or contig for this locus
.IP <position>
Position on the contig of this locus (ones-based)
.IP <quantile1_value>
Value of first quantile as specified in \fIquantiles_string\fP
.IP <quantile2_value>
Value of second quantile specified in \fIquantiles_string\fP
.IP <quantileN_value>
Value of last quantile specified in \fIquantiles_string\fP

(These fields are only optionally output if the \fI\-g
print_pileup_fields\fP is used)

.IP [sample1_read_depth]
total depth-of-coverage at this locus for first sample
.IP [sample1_bases_raw]
pileup bases of first sample
.IP [sample1_qual_codes]
quality codes for first sample
.IP [sample2_read_depth]
total depth-of-coverage at this locus for second sample
.IP [sample2_bases_raw]
pileup bases of second sample, or 'REF' if this is comparison to
reference
.IP [sample2_qual_codes]
quality codes for second sample, or 'REF' if this is comparison to
reference

.RE

.TP
.B output.comp
While output.dist gives 1-dimensional mutational distance, base
composition is 4-dimensional.  Thus, output.comp provides 4 lines per
locus per sample: one line each for the marginal composition estimate
of each of the four nucleotides.  The 8th column gives the estimated
base identity.  The 10th column gives the mean estimated fraction.
For instance, samP is given a mean estimate of 79% T.  The next five
numbers are quantiles chosen by the user.

samP  1  462258  A  2  0  0  A  1  0.071  0.000  0.000  0.011  0.372  0.716
.br
samP  1  462258  A  2  0  0  C  3  0.071  0.000  0.000  0.008  0.359  0.722
.br
samP  1  462258  A  2  0  0  G  2  0.071  0.000  0.000  0.009  0.362  0.717
.br
samP  1  462258  A  2  0  0  T  0  0.787  0.124  0.341  0.855  0.997  1.000
.br
samQ  1  462258  A  5  0  0  A  0  0.895  0.425  0.649  0.939  0.999  1.000
.br
samQ  1  462258  A  5  0  0  C  3  0.034  0.000  0.000  0.004  0.177  0.427
.br
samQ  1  462258  A  5  0  0  G  1  0.036  0.000  0.000  0.004  0.184  0.421
.br
samQ  1  462258  A  5  0  0  T  2  0.035  0.000  0.000  0.004  0.178  0.420
.br
samR  1  462258  A  7  0  0  A  1  0.152  0.001  0.012  0.124  0.386  0.580
.br
samR  1  462258  A  7  0  0  C  0  0.797  0.367  0.541  0.821  0.970  0.995
.br
samR  1  462258  A  7  0  0  G  3  0.025  0.000  0.000  0.003  0.130  0.328
.br
samR  1  462258  A  7  0  0  T  2  0.026  0.000  0.000  0.003  0.133  0.308

The tab-delimited fields are:

.RS 
.PD 0
.IP <sample_label> 20
sample label as specified in \fBsamples.rdb\fP
.IP <reference>
Name of the contig or chromosome of this locus
.IP <position>
Position (ones-based) of this locus on the contig
.IP <reference_base>
Nucleotide of the reference genome at this locus
.IP <match_depth_hi_q>
Total number of reads with CIGAR match state and qual >=
\fImin_quality_score\fP at this locus
.IP <match_depth_lo_q>
Total number of reads with CIGAR match state and qual <
\fImin_quality_score\fP at this locus
.IP <indel_depth>
Number of reads with an indel state at this locus
.IP <inferred_base>
The hypothesis base whose composition is estimated by the
quantiles. A '+' is supplied for the summary line.
.IP <rank_order>
Order of abundance of each <inferred_base> for this locus.  Rank 0
means 'most abundant'. A '+' is supplied for the summary line.
.IP <mean>
The mean value among all posterior sample points.
.IP <quantile_value1>
Value of the first quantile (specified in \fIquantiles_string\fP) of the
marginal estimate for this base.
.IP <quantile_value2>
Value of the second quantile...
.IP <quantile_valueN>
Value of the Nth quantile...

.RE

.TP
.B output.idist
This is the same idea as \fBoutput.dist\fP, but reports differences in
indel content rather than basecalls.  To illustrate, in estimating
difference in base composition, there are counts of four 'events', one
for each possible base.  Estimating difference in indel content also
considers 'events'.  But, now the events are 'match' (a read without
an indel), 'insertion' (a read with a particular inserted sequence)
and 'deletion' (a read that is missing genomic content).

Insertions are distinguished by the exact inserted sequence present.
Deletions are, by definition distinguished only by the length of
deleted sequence present, because there is no way to distinguish what
was deleted.  Finally, the 'match' state is not distinguished by the
actual base there, since that sort of difference is covered by the
\fBoutput.dist\fP file.




.RS

.IP <sample1_label> 28
The label for the first sample in the pair, as specified in
\fBsamples.rdb\fP
.IP <sample2_label>
The label for the second sample in the pair, as specified in
\fBsamples.rdb\fP
.IP <contig_name>
Name of the chromosome or contig for this locus
.IP <refbase>
Base of the reference at this locus
.IP <position>
Position on the contig of this locus (ones-based)
.IP <quantile1_value>
Value of the first quantile as specified in \fIquantiles_string\fP
.IP <quantile2_value>
Value of second quantile specified in \fIquantiles_string\fP
.IP <quantileN_value>
Value of last quantile specified in \fIquantiles_string\fP
.IP <events1_counts>
CSV list of sample1 counts for all indel events in either
sample. Indels exclusive to sample2 show zeros here.
.IP <events2_counts>
CSV list of sample2 counts for all indel events in either
sample. Indels exclusive to sample1 show zeros here.
.IP <all_events>
CSV list of indel events, in order of <events1_counts> or
<events2_counts>.  Match state is '@'.  Insertions are e.g. '+ACG'.
Deletions are .e.g '-TTT' where 'TTT' is reference sequence.
.IP <sample1_match_depth_hi_q>
Total number of reads with CIGAR match state and qual >=
\fImin_quality_score\fP at this locus
.IP <sample1_match_depth_lo_q>
Total number of reads with CIGAR match state and qual <
\fImin_quality_score\fP at this locus
.IP <sample1_indel_depth>
Number of reads with an indel state at this locus
.IP <sample1_bases_raw>
pileup bases of first sample
.IP <sample1_qual_codes>
quality codes for first sample
.IP <sample2_match_depth_hi_q>
Total number of reads with CIGAR match state and qual >=
\fImin_quality_score\fP at this locus
.IP <sample2_match_depth_lo_q>
Total number of reads with CIGAR match state and qual <
\fImin_quality_score\fP at this locus
.IP <sample2_indel_depth>
Number of reads with an indel state at this locus
.IP <sample2_bases_raw>
pileup bases of second sample
.IP <sample2_qual_codes>
quality codes for second sample

.RE

.RS

.B Example output

Below shows a few of the most differing loci in a run that included
comparing sample pairs (2, 3), and (1, 2).  Five distance quantiles
are shown, the default values of 0.005, 0.05, 0.5, 0.95, 0.995.  The
values are euclidean distance in the Dirichlet event space of
frequencies.  In the first line it can be seen that sample 2 had 13
reads with a '-C' deletion, and only 3 reads with no indel.  Sample 3
exhibited all 32 reads with no indel.

2   3   chr6    93472344     0.6449  0.7927  1.0726  1.2604  1.3375  13,3    0,32    -C,@      [pileup fields...]
.br
2   3   chrX    131889532    0.5633  0.7273  1.0000  1.1978  1.2788  0,17    17,5    -T,@      [pileup fields...]
.br
1   2   chrX    146524484    0.5630  0.7680  1.1155  1.3178  1.3729  10,0    1,10    -TATA,@   [pileup fields...]
.br
2   3   chrX    53616185     0.5504  0.7041  0.9897  1.1985  1.2905  12,4    0,27    +CCCC,@   [pileup fields...]
.br
2   3   chrX    98048653     0.5405  0.6985  0.9522  1.1504  1.2403  18,7    0,26    -C,@      [pileup fields...]

Here are shown just the \fBbases\fP pileup field, transposed for
clarity in this documentation.  The actual format includes bases,
quals, and depth, as specified below.

2   3   chr6    93472344    ,-1c,-1c,-1c.-1C,-1c,-1c.-1C.-1C,-1c,-1c,-1c.,-1c.,,-1c                  ,,,,,..,....,....,,,,....,.,.,.^],
.br
2   3   chrX    131889532   ,$.,.,.,..,......,                                                       ,,,-1t,-1t,-1t,-1t,-1t.-1T.,-1t,-1t,-1t,,.-1T.-1T,-1t.-1T.-1T.-1T.-1T.-1T
.br
1   2   chrX    146524484   .-4TATA,-4tata,-4tata.-4TATA,-4tata.-4TATA,-4tata.-4TATA.-4TATA.-4TATA   .,**,-4tata**...^].
.br
2   3   chrX    53616185    .+4CCCC.+4CCCC,+4ccccG.+4CCCC.+4CCCC*,+4cccc.+4CCCC,.+4CCC \fB[truncated]\fP   .,,.A,.,,,,,,.......,,,,,^],^],
.br
2   3   chrX    98048653    ,-1c,-1c.,-1c,-1c.-1C.-1C,-1c.-1C.-1C..-1C,,-1c,-1c.-1C,-1 \fB[truncated]\fP   ,,,.,..,,,.,.,.,..,,..,..,

.RE

.TP
.B output.points
Optional sample points and numerical CDFs output from \fBdep dist\fP.
Warning: very large file, will contain 10000 lines (or the value of
\fImax_sample_points\fP) for each locus processed. Useful for plotting
and visualizing the shape of the posterior as a cloud of points in
3-D, or for plotting the individual base CDFs using their ranks. Also,
the lines do NOT have information in them that denotes which locus the
points are from. So, this output should be used either with
single-locus input, or else the N lines need to be split out into
groups. Tab-separated fields are:

.RS
.PD 0
.IP <i> 20
This is the i in "the i'th sample point" among the sample points taken
from the posterior. It is just an arbitrary index of the point
(zero-based)
.IP <sample_label>
sample label as specified in \fBlabel\fP flag or \fBsamples.rdb\fP
file.
.IP <a_i>
Coordinate of the i'th sample point cooresponding to base 'a'
(resp. c, g, or t)
.IP <c_i>
etc
.IP <g_i>
etc
.IP <g_i>
etc
.IP <ra_i>
Ranking of the i'th sample point in order of increasing abundance of
base 'a' (resp. c, g, or t)
.IP <ra_i>
etc
.IP <ra_i>
etc
.IP <ra_i>
etc

.RE


.SH LONG DESCRIPTION

Estimates mutational distance at each locus and for each pair of
samples specified in \fBsamples.rdb\fP, reporting loci that differ by
some minimum amount.  Also allows measuring 'distance' of a sample
from the reference sequence (see \fBsample_pairings.rdb\fP below) The
1-D mutational distance distribution is generated from the two 4-D
base composition estimates run on the pair of samples by generating
random pairs of sample points, one from each 4-D distribution, and
computing the euclidean distance between each pair of points. From the
1-D distribution, it computes confidence intervals. The same approach
is taken to generate mutational distance for indels.

The vast majority of loci will not differ between samples.  To take
advantage of this and avoid doing unnecessarily refined computations,
\fBdep dist\fP uses several heuristics.

The first heuristic is use an approximation to the true posterior by
assuming perfect quality scores (though ignoring anything below a
user-defined threshold).  Intuitively, such distributions will be
narrower than the true posterior, and thus any distance between two
such distributions will be greater than that arising from the pair of
true posteriors.  Thus, if the approximations do not differ above
threshold, then the true posteriors will not differ either, and thus
the more expensive calculations of true posteriors may be skipped.
The approximating distribution is a pure Dirichlet parameterized by
the prior plus the four counts of each basecall.  The space of 4
smallish integer counts is a relatively small space, thus sample
points from the most common of these distributions may be
pre-calculated and cached.

The second heuristic considers the space of all pairs of 4 integer
counts, one from each distribution, each representing the count of
each basecall at a locus for a sample.  For instance, the basecalls
AaaAccCAcG and cAcCAtAcGA yield counts { 5, 4, 1, 0 } and { 4, 4, 1, 1
}. These two sets of counts, together with a Dirichlet prior
(typically 0.1) yield Dirichlet distributions with alpha values { 5.1,
4.1, 1.1, 0.1 } and { 4.1, 4.1, 1.1, 1.1 }.  Sample points from these
two Dirichlets may be cached as described above, and the 1D distance
distribution on the simplex may be approximated by the set of 1D
euclidean simplex distances of pairs of these points.  Applying a
distance threshold at a given quantile (low or high) allows one to
classify the pair as changed, ambiguous, or unchanged.

The component basecall counts in each of the two loci may be permuted
without affecting the outcome.  For example, a pair of counts for (A,
C, G, T) of {0, 2, 725, 10} and {2, 1, 695, 8} can be permuted in
tandem to {725, 10, 2, 0} and {695, 8, 1, 2}, such that the counts are
mostly in descending order.  This permutation allows one to calculate
changed/ambiguous/unchanged status for a set of equivalent pairs of
counts regardless of base identity.

Also, note that a family of such pairs, produced by varying a single
component in one of the distributions will have a unimodal shape in
any given quantile of its distance distribution.  One particular value
in the range will yield a minimum distance, with pairwise distance
increasing monotonically as the single component moves away in either
direction.  Thus, applying thresholds then yields the pattern of
changed, ambiguous, unchanged, ambiguous, changed.  In order to save
further computation, we use a binary search to find the points along
this family for each of the five phases.


.TP
.B Posterior Probability Distribution used for \fIdist\fP.

The posterior probability distribution is a real-valued function
defined over the 4D "nucleotide composition" space of (A,C,G,T) with
A+C+G+T = 1 and all positive.  It is a function parameterized by the
set of all basecalls and associated quality scores that align at a
single locus.  Its value at a point in {A,C,G,T} represents the
relative probability that the actual sample base composition at that
locus takes that value. Because it is a continuous probability
distribution and is not analytical, it can only be used by generating
sample points and calculating quantile values by counting the number
of those points on either side of some chosen position in the simplex.

The distribution function itself can be thought of as a 4D Dirichlet
whose alpha parameters are the actual basecalls, with the "correction"
owing to the imperfect quality scores of those basecalls.

