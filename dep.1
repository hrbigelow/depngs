.TH DEP 1 "Version 1"

.SH NAME
dep \- diversity estimation probabilistically

.SH SYNOPSIS
dep dist [options] samples.rdb sample_pairings.rdb contig_order.rdb
.br
dep simp FTYPE input.jpd sim_comp.rdb > output.pileup
.br
dep simc [options] basecomp_priors.rdb nsim > sim_comp.rdb
.br
dep bqslocus [options] input.pileup label counts.bqs counts.bs counts.s
.br
dep bqs [options] input.pileup output.bqs
.br
dep bqs2jpd input.bqs output.jpd
.br
dep pug sample.pileup loci_to_retrieve.rdb contig_order.rdb
.br



.SH DESCRIPTION

.PP
.B dep
is a collection of programs for analyzing single-base loci, one at a
time, from an alignment of next-gen sequencing reads.

.TP
.B dist
dep dist [options] sample_index.rdb sample_pairings.rdb contig_order.rdb

Estimates mutational distance at each locus and for each pair of
samples specified in \fBsample_index.rdb\fP, reporting loci that
differ by some minimum amount.  Also allows measuring 'distance' of a
sample from the reference sequence (see \fBsample_pairings.rdb\fP
below) The 1-D mutational distance distribution is generated from the
two 4-D base composition estimates run on the pair of samples by
generating random pairs of sample points, one from each 4-D
distribution, and computing the euclidean distance between each pair
of points. From the 1-D distribution, it computes confidence
intervals. The same approach is taken to generate mutational distance
for indels.

The vast majority of loci will not differ between samples.  To take
advantage of this and avoid doing unnecessarily refined computations,
\fBdep dist\fP uses several heuristics.

The first heuristic is use an approximation to the true posterior by
assuming perfect quality scores (though ignoring anything below a
user-defined threshold).  Intuitively, such distributions will be
narrower than the true posterior, and thus any distance between two
such distributions will be greater than that arising from the pair of
true posteriors.  Thus, if the approximations do not differ above
threshold, then the true posteriors will not differ either, and thus
the more expensive calculations of true posteriors may be skipped.
The approximating distribution is a pure Dirichlet parameterized by
the prior plus the four counts of each basecall.  The space of 4
smallish integer counts is a relatively small space, thus sample
points from the most common of these distributions may be
pre-calculated and cached.

The second heuristic considers the space of all pairs of 4 integer
counts, one from each distribution, each representing the count of
each basecall at a locus for a sample.  For instance, the basecalls
AaaAccCAcG and cAcCAtAcGA yield counts { 5, 4, 1, 0 } and { 4, 4, 1, 1
}. These two sets of counts, together with a Dirichlet prior
(typically 0.1) yield Dirichlet distributions with alpha values { 5.1,
4.1, 1.1, 0.1 } and { 4.1, 4.1, 1.1, 1.1 }.  Sample points from these
two Dirichlets may be cached as described above, and the 1D distance
distribution on the simplex may be approximated by the set of 1D
euclidean simplex distances of pairs of these points.  Applying a
distance threshold at a given quantile (low or high) allows one to
classify the pair as changed, ambiguous, or unchanged.

The component basecall counts in each of the two loci may be permuted
without affecting the outcome.  For example, a pair of counts for (A,
C, G, T) of {0, 2, 725, 10} and {2, 1, 695, 8} can be permuted in
tandem to {725, 10, 2, 0} and {695, 8, 1, 2}, such that the counts are
mostly in descending order.  This permutation allows one to calculate
changed/ambiguous/unchanged status for a set of equivalent pairs of
counts regardless of base identity.

Also, note that a family of such pairs, produced by varying a single
component in one of the distributions will have a unimodal shape in
any given quantile of its distance distribution.  One particular value
in the range will yield a minimum distance, with pairwise distance
increasing monotonically as the single component moves away in either
direction.  Thus, applying thresholds then yields the pattern of
changed, ambiguous, unchanged, ambiguous, changed.  In order to save
further computation, we use a binary search to find the points along
this family for each of the five phases.


.TP
.B Posterior Probability Distribution used for \fIdist\fP.

The posterior probability distribution is a real-valued function
defined over the 4D "nucleotide composition" space of (A,C,G,T) with
A+C+G+T = 1 and all positive.  It is a function parameterized by the
set of all basecalls and associated quality scores that align at a
single locus.  Its value at a point in {A,C,G,T} represents the
relative probability that the actual sample base composition at that
locus takes that value. Because it is a continuous probability
distribution and is not analytical, it can only be used by generating
sample points and calculating quantile values by counting the number
of those points on either side of some chosen position in the simplex.

The distribution function itself can be thought of as a 4D Dirichlet
whose alpha parameters are the actual basecalls, with the "correction"
owing to the imperfect quality scores of those basecalls.

.TP
.B bqslocus
dep bqslocus [options] input.pileup label counts.bqs counts.bs counts.s

Tallies \fBbqslocus\fP (basecall, quality score, strand) summary
counts from provided pileup file, generating three files: bqs.cts,
bs.cts, s.cts. These are per locus statistics over (b,q,s), (b,s), or
(s).

.TP
.B bqs
dep bqs input.pileup output.bqs

Tallies \fBbqs\fP (basecall, quality score, strand) summary counts
data over the entire pileup file. This file theoretically summarizes
the characteristics of the sequencing run over all the data.

.TP
.B bqs2jpd
dep bqs2jpd input.bqs output.jpd

Expands \fBbqs\fP (basecall, quality score, strand) counts data that
is generated by \fBdep bqs\fP into bqsf (basecall, quality score,
strand, founder base).  The term \fIfounder base\fP refers to the
unseen actual nucleotide present in the single molecule that "founded"
the PCR colony on the flowcell.  Expansion means, for example, that a
basecall of "A" and quality score 30 imply that the founder base is
"A" with a probability of 99.9%, and C, G, T, each with an equal
probability of 0.033%.  This expansion is simplistic and could be
improved using more sophisticated statistics.

.TP
.B simp
dep simp FTYPE input.jpd sim_comp.rdb > output.pileup

Simulates a pileup file using FTYPE fastq quality scale (one of
.BR Sanger ,
.BR Solexa ,
.BR Illumina13 , 
or 
.BR Illumina15 ).
For each line in \fBsim_comp.rdb\fP, generates one line of pileup
output.  For each input line, the simulation first generates
a 'founder base' randomly from the composition provided in that line,
then generates basecalls and qualities according to the bayesian
causal model parameterized by the joint probability distribution in
\fBinput.jpd\fP, to the sequencing depth specified in
\fBsim_comp.rdb\fP.

.TP
.B simc
dep simc [options] basecomp_priors.rdb nsim > sim_comp.rdb

Simulates a set of \fBnsim\fP base compositions by sampling from the
distribution provided by \fBbasecomp_priors.rdb\fP.  (See format
descriptions below)

.SH OPTIONS

.B File formats

.RS 2

.TP
.B input.pileup
Samtools Pileup format input file.

.TP
.B sample.bqs
File specifying the total number of bases in the input pileup file
exhibiting each possible combination of basecall, quality score, and
strand.  This file is produced using
.BR "dep bqs" .
The tab-delimited fields are:

<basecall>  <quality_score>  <strand>  <count>

For example:

\(bu\(bu\(bu
.br
A       27      -       88505101
.br
A       28      +       124219630
.br
A       28      -       102822354
.br
A       29      +       263130624
.br
\(bu\(bu\(bu

.TP
.B sample.jpd
Contains the joint probability distribution P(basecall, quality_score,
strand, founder_base) derived from \fIsample.bqs\fP by inferring
founder_base frequency using the Phred definition.  See \fBdep
bqs2jpd\fP for details. The tab-delimited fields:

<bqs_string>  P(bqs,f=A)  p(bqs,f=C)  p(bqs,f=G)  p(bqs,f=T)

For example:

\(bu\(bu\(bu
.br
A_27_-  8.83285e+07      58863.6         58863.6         58863.6
.br
A_28_+  1.24023e+08        65625           65625           65625
.br
A_28_-  1.02659e+08      54320.8         54320.8         54320.8
.br
A_29_+  2.62799e+08       110421          110421          110421
.br
\(bu\(bu\(bu

Where the <bqs_string> is the concatenated information of basecall,
quality score, and strand.

.TP
.B samples.rdb
Specifies all of the samples to be processed.  Provides a mapping of
the sample's symbolic name to the locations of the \fBsample.jpd\fP
and \fBsample.pileup\fP files. The tab-delimited fields are:

<sample_name>  <sample.jpd>  <sample.pileup>

For example:

\(bu\(bu\(bu
.br
10      /path/to/10.jpd      /path/to/10.pileup
.br
11      /path/to/11.jpd      /path/to/11.pileup
.br
12      /path/to/12.jpd      /path/to/12.pileup
.br
13      /path/to/13.jpd      /path/to/13.pileup
.br
\(bu\(bu\(bu


.TP
.B sample_pairings.rdb
Specifies the set of sample pairs to compare against each other, and
also samples to compare against the reference genome, to detect
differences from reference. Contains lines of <label1><tab><label2>,
where <label1> and <label2> are the labels of samples given in
\fBsamples.rdb\fP file given as an argument.  The special value for
label2 of 'REF' indicates to compare the label1 sample against the
reference sequence.  'REF' can be thought of as a pseudo-sample that
has ultra-high sequence depth and matches the reference everywhere.
The algorithm actually uses the same pairwise distance technique using
this pseudo-sample as the second sample in the pair.



.TP
.B contig_order.rdb
Specifies the set of all contigs, and their orderings in all
\fBsample.pileup\fP input files.  The ordering must be consistent with
the ordering in all of the pileup input files, and must mention every
contig that appears in any pileup input file. The tab-delimited fields
are:

<contig_name>  <contig_rank>

For example:

.br
chr1    1
.br
chr2    2
.br
chr3    3
.br
\(bu\(bu\(bu
.br
chr22   22
.br
chrX    23
.br
chrY    24
.br
chrM    25

.TP
.B output.comp
The main result file from \fBdep dist\fP. The base composition of a
given locus in a given sample is represented by 5 lines in this file.
One line each for the marginal composition estimate of each of the
four nucleotides, plus one 'summary' line showing totals of the
marginals.  The tab-delimited fields (with definitions) are:

.RS 
.PD 0
.IP <sample_label> 20
sample label as specified in \fBsamples.rdb\fP
.IP <algorithm>
either 'MH' if Metropolis-Hastings is used, or 'SS' if Slice Sampling
.IP <reference>
Name of the contig or chromosome of this locus
.IP <position>
Position (ones-based) of this locus on the contig
.IP <reference_base>
Nucleotide of the reference genome at this locus
.IP <match_depth_hi_q>
Total number of reads with CIGAR match state and qual >=
\fBmin_quality_score\fP at this locus
.IP <match_depth_lo_q>
Total number of reads with CIGAR match state and qual <
\fBmin_quality_score\fP at this locus
.IP <indel_depth>
Number of reads with an indel state at this locus
.IP <inferred_base>
The hypothesis base whose composition is estimated by the
quantiles. A '+' is supplied for the summary line.
.IP <rank_order>
Order of abundance of each <inferred_base> for this locus.  Rank 0
means 'most abundant'. A '+' is supplied for the summary line.
.IP <mean>
The mean value among all posterior sample points.
.IP <mode>
The mode value of the posterior.  Could be interpreted as the 'single
most likely base composition'
.IP <quantile_value1>
Value of the first quantile (specified in \fBquantiles_file\fP) of the
marginal estimate for this base.
.IP <quantile_value2>
Value of the second quantile...
.IP <quantile_valueN>
Value of the Nth quantile...

.RE

.RS

.B Example output

Below shows the base composition estimate for locus chr1:10039 for
samples 11, 12, and 13.  Five quantile values are shown, which, for
this run were the default composition quantile values of 0.005, 0.05,
0.5, 0.95, and 0.995. The lowest quantile value can be used as a
conservative lower limit to establish the presence of a given base at
the locus at high confidence.  The highest quantile value, conversely,
can be used as an upper-limit threshold to establish the absence of a
given base at high confidence.

11    MH    chr1    10039   a     126   126   A     0     0.95704664    0.98260359    0.90659491    0.92185146    0.95954041    0.98396037    0.99411640
.br
11    MH    chr1    10039   a     126   126   C     1     0.02457584    0.01739641    0.00241438    0.00547278    0.02163644    0.05100653    0.06718401
.br
11    MH    chr1    10039   a     126   126   G     2     0.00984136    0.00000000    0.00004587    0.00053659    0.00737108    0.02712454    0.04330999
.br
11    MH    chr1    10039   a     126   126   T     3     0.00853616    0.00000000    0.00004755    0.00039771    0.00627755    0.02457596    0.04256626
.br
11    MH    chr1    10039   a     126   126   +     +     1.00000000    1.00000000    0.90910271    0.92825854    0.99482548    1.08666739    1.14717665
.br
12    MH    chr1    10039   a     79    79    A     0     0.95157275    0.98821348    0.88560945    0.90774664    0.95485831    0.98298489    0.99260859
.br
12    MH    chr1    10039   a     79    79    C     1     0.02416948    0.01178652    0.00078956    0.00359325    0.01979380    0.05861038    0.08886303
.br
12    MH    chr1    10039   a     79    79    G     2     0.01215270    0.00000000    0.00006959    0.00070434    0.00895192    0.03583066    0.06038498
.br
12    MH    chr1    10039   a     79    79    T     3     0.01210507    0.00000000    0.00005961    0.00065514    0.00892939    0.03570172    0.07152482
.br
12    MH    chr1    10039   a     79    79    +     +     1.00000000    1.00000000    0.88652822    0.91269937    0.99253342    1.11312765    1.21338142
.br
13    MH    chr1    10039   a     69    69    A     0     0.95938479    1.00000000    0.88565149    0.91930411    0.96314013    0.98846860    0.99595105
.br
13    MH    chr1    10039   a     69    69    C     2     0.01351182    0.00000000    0.00011938    0.00071743    0.00949379    0.03885545    0.06613156
.br
13    MH    chr1    10039   a     69    69    G     1     0.01390227    0.00000000    0.00004668    0.00070196    0.00960647    0.04279993    0.06896688
.br
13    MH    chr1    10039   a     69    69    T     3     0.01320112    0.00000000    0.00007318    0.00070350    0.00894599    0.04097132    0.06851669
.br
13    MH    chr1    10039   a     69    69    +     +     1.00000000    1.00000000    0.88589073    0.92142700    0.99118638    1.11109529    1.19956618

.RE

.TP
.B output.dist
The main result file from \fBdep dist\fP.  Each line represents a
single locus whose base composition of two particular samples differs
above a threshold.  The tab-delimited fields are:

.RS

.IP <sample1_label> 24
The label for the first sample in the pair, as specified in
\fBsamples.rdb\fP
.IP <sample2_label>
The label for the second sample in the pair, as specified in
\fBsamples.rdb\fP
.IP <contig_name>
Name of the chromosome or contig for this locus
.IP <position>
Position on the contig of this locus (ones-based)
.IP <quantile1_value>
Value of the first quantile as specified in \fBdist_quantiles_file\fP.
.IP <quantile2_value>
Value of second quantile specified in \fBdist_quantiles_file\fP.
.IP <quantileN_value>
Value of last quantile specified in \fBdist_quantiles_file\fP.

(These fields are only optionally output if the \fB\-g
print_pileup_fields\fP is used)

.IP [sample1_read_depth]
total depth-of-coverage at this locus for first sample.
.IP [sample1_bases_raw]
pileup bases of first sample.
.IP [sample1_qual_codes]
quality codes for first sample.
.IP [sample2_read_depth]
total depth-of-coverage at this locus for second sample.
.IP [sample2_bases_raw]
pileup bases of second sample.
.IP [sample2_qual_codes]
quality codes for second sample.

.RE

.RS

.B Example Output

Here is a selection of output of a run showing pairwise comparisons of
samples 10, 11, 12, and 13 in various pairings. The distance quantile
values shown are for quantiles 0.005, 0.05, 0.5, 0.95, and 0.995. The
quantile values reflect the mutational distance distribution (see
\fBdep dist\fP in the DESCRIPTION section) which ranges from 0 to
sqrt(2).

10      11      1       78850    0.3536  0.5590  0.9843  1.2748  1.4142
.br
11      12      1       78850    0.2500  0.4677  0.9014  1.2500  1.4142
.br
10      11      1       81266    0.3062  0.3953  0.7071  0.9843  1.0607
.br
12      13      1       81266    0.6374  0.8101  1.0607  1.2374  1.2374
.br
11      12      1       83819    0.1768  0.1768  0.3536  0.5303  0.7071
.br
10      11      1       83906    0.1768  0.1768  0.3536  0.7071  0.7071
.br
10      13      1       83906    0.1768  0.1768  0.3536  0.7071  0.7071

.RE

.TP
.B output.idist
Similar in concept to \fBoutput.dist\fP, but deals with differences in
the indel 'composition'. Eeach read at a particular locus can exhibit
either an insertion, a deletion, or a non-indel 'event'.  The
particular sequence and length inserted or deleted distinguishes
different indels from each other as separate 'events'.  Taking a tally
of all event types across a pair of samples, the resulting sets can be
viewed as a sampling from an underlying population of events.

This is the same conception as with mutational distance: the
underlying base composition is estimated as a sampling of events of
type 'A','C','G', or 'T'.  The main difference is that, with base
composition events, quality score is taken into account to estimate
probability that the true event corresponds with the observed one
(basecall vs actual founder base).  That is, there is no 'quality
score' associated with the probability that the alignment indel (or
non-presence of indel) is correct. In particular, many of the
differing loci tend to have poly-A stretches, indicating alignment
error.

Nonetheless, the mutational distance is calculated the same way, by
sampling from two Dirichlet distributions parameterized on the indel
event tallies, and then generating a 1-D euclidean distance
distribution, and finally generating quantiles.


The file provides one line for each locus and a particular pair of
samples, that differs above threshold. The tab-delimited fields are:

.RS

.IP <sample1_label> 24
The label for the first sample in the pair, as specified in
\fBsamples.rdb\fP
.IP <sample2_label>
The label for the second sample in the pair, as specified in
\fBsamples.rdb\fP
.IP <contig_name>
Name of the chromosome or contig for this locus
.IP <refbase>
Base of the reference at this locus
.IP <position>
Position on the contig of this locus (ones-based)
.IP <quantile1_value>
Value of the first quantile as specified in \fBdist_quantiles_file\fP
.IP <quantile2_value>
Value of second quantile specified in \fBdist_quantiles_file\fP
.IP <quantileN_value>
Value of last quantile specified in \fBdist_quantiles_file\fP
.IP <events1_counts>
Comma-separated list of counts for sample1 of all indel events that
occur in either sample. Zeros are shown in this list for events that
only occur in sample2.
.IP <events2_counts>
Comma-separated list of counts for sample2 of all indel events that
occur in either sample. Zeros are shown in this list for events that
only occur in sample1.
.IP <all_events>
Comma-separate list of all indel events, in order corresponding to
<events1_counts> and <events2_counts>.  Non-indel event is represented
as '@'. Insertions are represented as, for example, '+ACG'. Deletions
are represented as, for example, '-TTT' where 'TTT' is the sequence of
the reference.
.IP <sample1_read_depth>
total depth-of-coverage at this locus for first sample
.IP <sample1_bases_raw>
pileup bases of first sample
.IP <sample1_qual_codes>
quality codes for first sample
.IP <sample2_read_depth>
total depth-of-coverage at this locus for second sample
.IP <sample2_bases_raw>
pileup bases of second sample
.IP <sample2_qual_codes>
quality codes for second sample

.RE

.RS

.B Example output

Below shows a few of the most differing loci in a run that included
comparing sample pairs (2, 3), and (1, 2).  Five distance quantiles
are shown, the default values of 0.005, 0.05, 0.5, 0.95, 0.995.  The
values are euclidean distance in the Dirichlet event space of
frequencies.  In the first line it can be seen that sample 2 had 13
reads with a '-C' deletion, and only 3 reads with no indel.  Sample 3
exhibited all 32 reads with no indel.

2   3   chr6    93472344     0.6449  0.7927  1.0726  1.2604  1.3375  13,3    0,32    -C,@      [pileup fields...]
.br
2   3   chrX    131889532    0.5633  0.7273  1.0000  1.1978  1.2788  0,17    17,5    -T,@      [pileup fields...]
.br
1   2   chrX    146524484    0.5630  0.7680  1.1155  1.3178  1.3729  10,0    1,10    -TATA,@   [pileup fields...]
.br
2   3   chrX    53616185     0.5504  0.7041  0.9897  1.1985  1.2905  12,4    0,27    +CCCC,@   [pileup fields...]
.br
2   3   chrX    98048653     0.5405  0.6985  0.9522  1.1504  1.2403  18,7    0,26    -C,@      [pileup fields...]

Here are shown just the \fBbases\fP pileup field, transposed for
clarity in this documentation.  The actual format includes bases,
quals, and depth, as specified below.

2   3   chr6    93472344    ,-1c,-1c,-1c.-1C,-1c,-1c.-1C.-1C,-1c,-1c,-1c.,-1c.,,-1c                  ,,,,,..,....,....,,,,....,.,.,.^],
.br
2   3   chrX    131889532   ,$.,.,.,..,......,                                                       ,,,-1t,-1t,-1t,-1t,-1t.-1T.,-1t,-1t,-1t,,.-1T.-1T,-1t.-1T.-1T.-1T.-1T.-1T
.br
1   2   chrX    146524484   .-4TATA,-4tata,-4tata.-4TATA,-4tata.-4TATA,-4tata.-4TATA.-4TATA.-4TATA   .,**,-4tata**...^].
.br
2   3   chrX    53616185    .+4CCCC.+4CCCC,+4ccccG.+4CCCC.+4CCCC*,+4cccc.+4CCCC,.+4CCC \fB[truncated]\fP   .,,.A,.,,,,,,.......,,,,,^],^],
.br
2   3   chrX    98048653    ,-1c,-1c.,-1c,-1c.-1C.-1C,-1c.-1C.-1C..-1C,,-1c,-1c.-1C,-1 \fB[truncated]\fP   ,,,.,..,,,.,.,.,..,,..,..,

.RE

.TP
.B output.points
Optional sample points and numerical CDFs output from \fBdep dist\fP.
Warning: very large file, will contain 10000 lines (or the value of
\fBfinal_num_points\fP) for each locus processed. Useful for plotting
and visualizing the shape of the posterior as a cloud of points in
3-D, or for plotting the individual base CDFs using their ranks. Also,
the lines do NOT have information in them that denotes which locus the
points are from. So, this output should be used either with
single-locus input, or else the N lines need to be split out into
groups. Tab-separated fields are:

.RS
.PD 0
.IP <i> 20
This is the i in "the i'th sample point" among the sample points taken
from the posterior. It is just an arbitrary index of the point
(zero-based)
.IP <sample_label>
sample label as specified in \fBlabel\fP flag or \fBsamples.rdb\fP
file.
.IP <a_i>
Coordinate of the i'th sample point cooresponding to base 'a'
(resp. c, g, or t)
.IP <c_i>
etc
.IP <g_i>
etc
.IP <g_i>
etc
.IP <ra_i>
Ranking of the i'th sample point in order of increasing abundance of
base 'a' (resp. c, g, or t)
.IP <ra_i>
etc
.IP <ra_i>
etc
.IP <ra_i>
etc

.RE






.TP
.B basecomp_priors.rdb
A file that describes a distribution of locus compositions to choose
from in order to simulate loci of each of those compositions.  The
tab-delimited fields are:

<fraction_A>  <fraction_C>  <fraction_G>  <fraction_T>  <fraction_this_comp>

For example:

.br
0.5    0.5    0    0   10
.br
1      0      0    0   10
.br
0      1      0    0   20

would specify a grab-bag of 25% A/C het loci, 25% A/A homozygous loci,
and 50% C homozygous loci.  The values in the last column need not be
normalized.


.TP
.B sim_comp.rdb
Simulated locus composition output.  Describes a the base composition
of a set of loci simulated according to the frequencies in
\fBbasecomp_priors.rdb\fP.  Each locus is one line with fields:

<position>  <A_comp>  <C_comp>  <G_comp>  <T_comp> <depth>

For example, here is a simulation of 7 loci using
\fBbasecomp_priors.rdb\fP as sampling source:

0    0.000000     0.000000     0.000000     1.000000    1000
.br
1    0.000000     1.000000     0.000000     0.000000    1000
.br
2    0.000000     0.000000     1.000000     0.000000    1000
.br
3    1.000000     0.000000     0.000000     0.000000    1000
.br
4    0.000000     1.000000     0.000000     0.000000    1000
.br
5    1.000000     0.000000     0.000000     0.000000    1000
.br
6    0.000000     0.000000     0.000000     1.000000    1000
.br
7    0.000000     0.000000     1.000000     0.000000    1000
.br

.RE

.B Command Option Definitions

Here are given the symbolic names of command options for all of these
commands, grouped by theme.  The actual one-letter switches for these
options are shown in each specific sub-command.

.TP
.I label
An arbitrary string to be added to each line of output.  Useful for
identifying output by line rather than by filename, so that it can be
pooled and batch processed.

.TP
.I verbose
With this flag set, output lots of information about mode-finding and
other things. This is \fBvery\fP verbose.

.TP
.I dist_file
Name of file to report mutational distance quantile values.  If not
provided, will not perform distance calculation.

.TP
.I comp_file
Name of file to report base composition marginal quantile values. If
not provided, do not perform composition estimates.

.TP
.I indel_dist_file
Name of file to report loci that differ in indel content, using the
Dirichlet parameterized by the counts of each indel event. If not
provided, do not calculated indel distance.

.TP
.I input_range_file
Input file that defines ranges of loci to process, in the format
<contig><tab><start><tab><end>, for example: "chr1 1000000 2000000".
Useful for easily breaking up the input into batches for
parallelizing.  dep will efficiently scan the large pileup files to
find the specified ranges.

.TP
.I summary_stats_file
Output file that provides the following columns: sample1, sample2,
total, cacheable, cache_was_set, confirmed_changed, changed,
ambiguous_or_changed, ambiguous, ambiguous_or_unchanged,
unchanged. The last six columns give the numbers of loci classified
based on the evidence for above-threshold mutational distance.  For
instance, loci with too little coverage will always fall in the
ambiguous category regardless of whether the underlying samples have a
true genetic change or not. The ambiguous_or_changed and
ambiguous_or_unchanged categories represent a second level of
ambiguity: the supporting data are just enough to make the algorithm
unsure whether to classify in one of the other categories.  Finally,
confirmed_changed are the subset of changed that are confirmed by
weighting using quality scores.  All other stats are determined using
basecalls alone.

.TP
.I min_distance
Minimum mutational distance (on a [0,1] simplex scale) to call a locus
changed between a pair of samples. For example, 0.5 represents a
haploid change from AA to AC.  However, this distance is measured at
\fIposterior_confidence\fP, so the value should be lower (more
permissive) than this.  For example, a true haploid change, when
sequenced to ~50x depth in both samples, will manifest as low as 0.2
at a confidence of 99%. In the limit of infinite depth, even a 99%
confidence estimate will converge to 0.5, however.

.TP
.I posterior_confidence
The quantile in the pairwise distance distribution at which
min_distance is assessed in order to classify the locus as changed.

.TP
.I beta_confidence
The pairwise distance distribution is sampled randomly, and each
sample point is classified as a 'success' if its value is less than
min_distance, or 'failure' otherwise.  This bernoulli trial allows
estimation of the true mass fraction of the distribution on either
side of min_distance, through the Beta distribution, known as the
Jeffrey's Interval in
http://en.wikipedia.org/wiki/Binomial_proportion_confidence_interval.
This value gives the high-end quantile confidence for using this
procedure.

.TP
.I max_sample_point_pairs
Maximum number of pairs of Dirichlet sample points that will be
generated to estimate distance quantiles.

.TP
.I prior_alpha
Should range from 1e-5 to 1. A lower values allows low-coverage data
to attain more statistical significance and thus make it more likely
for a pair of loci to be called as differing. Default 0.1.

.TP
.I min_quality_score
The minimum quality score that a base must have in order to be
considered as data for parameterizing the posterior.  It is advisable
to set this at or above 5 for Illumina data, or even 10, however, this
may eliminate the chance to discover real distances in low-coverage
loci.

.TP
.I fastq_type
One of
.BR Sanger ,
.BR Solexa ,
.BR Illumina13 , 
or 
.BR Illumina15 .
Specify this if you know the quality score offset of the quality
scores in the pileup file. Without setting this, dep dist will
auto-detect it, but this requires scanning the entire pileup file,
which will take several minutes.

.TP
.I do_print_pileup_fields
If present, print the six extra fields read_depth1, basecalls1,
quality_codes1, read_depth2, basecalls2, quality_codes2 in
\fBoutput.dist\fP.

.TP
.I num_worker_threads
Number of worker threads.  Currently, the program is I/O bound, so
many worker threads sit idle most of the time waiting for input. Uses
POSIX threads, not processes.  There will be only one process for the
duration of the program.

.TP
.I max_concurrent_reads
Maximum number of worker threads that are allowed to read from
different sections of the input files concurrently.  To get maximum
throughput, a value of 4-8 should be used, but not higher than 8.
Each worker thread goes through a loop of wait/read/process/write.
Since the worker threads are not synchronized in any way, except in
that they must wait if there are no readers available, it is prudent
to have at least 4 reader threads so that at least two worker threads
are reading at a given time.

.TP
.I max_mem
Approximate maximum memory in bytes to reserve for running the program
overall.  This should be set at about 80% of the available physical
memory (provided you have use of the entire machine).  This allows
more caching and reading of greater chunks of files, which limits the
amount of file scanning needed to delineate input chunks.

.TP
.I quantiles_string
A comma-separated list of numbers, ascending, between zero and one.
These specify all of the quantiles to output quantile values for the
mutational distance estimate and the single-base marginal composition
estimates.

.B Command Options Table

\fBoption\fP for \fBdep dist\fP
.br
label                     
.br
verbose                   
.br
dist_file                 -d [blank]
.br
comp_file                 -c [blank]
.br
indel_dist_file           -i [blank]
.br
input_range_file          -r [blank]
.br
summary_stats_file        -x [blank]
.br
min_distance              -y [0.2]
.br
posterior_confidence      -X [0.99]
.br
beta_confidence           -Z [0.9999]
.br
max_sample_point_pairs    -f [10000]
.br
prior_alpha               -p [0.1]
.br
min_quality_score         -q [5]
.br
fastq_type                -F [None]
.br
do_print_pileup_fields    -g [off]
.br
num_worker_threads        -t [1]
.br
max_concurrent_reads      -R [2]
.br
max_mem                   -m [4e9]
.br
quantiles_string          -Q ["0.005,0.05,0.5,0.95,0.995"]
.br

\fBoption\fP for...               \fBsimc\fP          \fBbqslocus\fP       \fBbqs\fP             \fBpug\fP
.br
sequencing_depth          | -d          |              |               |
.br
num_threads               |             | -t [1]       | -t [1]        |
.br
max_mem                   |             |              | -m [1e8]      | -m [1e9]
.br
fastq_type                |             |              | -F [None]     |
.br
out_buf_size              |             |              |               | -b [8e6]
